Forge of Empires

Server gives y, it's public key
x is the private key, which is a randint less than p-2

p is 179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624225795083

g is 3 

mask is a ton of 1s same bit-length as p

need to get x from y, then generate r and s from x

y = g**x mod p

128759463294163633217931319164729068262300042744662847656473375130659823002972812480499373988826425285884035342329366875640211151883836656464702434656117043718817459014365411951591639904013963295614492871218656118861813878411639677516706413343489529262758757962500469061594479577460161195784121723764194429194 = 3^x mod 179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624225795083


so log base 3 (y) = x mod p

brute force/solve discrete log probably won't work

error in verification maybe?

k = randint < p-2 rel. prime to p-1
r = g^k mod p
s = (m-x*r) * k^-1 mod (p-1) mod (p-1)
g^m mod p == (y^r mod p) * (r^s mod p) mod p

